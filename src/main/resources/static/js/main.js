document.addEventListener('DOMContentLoaded', function() {
    // üéØ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ (Ïã§Ï†úÎ°úÎäî Î∞±ÏóîÎìúÏóêÏÑú Fetch API Îì±ÏúºÎ°ú Í∞ÄÏ†∏Ïò¨ Îç∞Ïù¥ÌÑ∞)
    // ÏïÑÏù¥ÏΩò ÌÅ¥ÎûòÏä§Îäî Font AwesomeÏùÑ ÏòàÏãúÎ°ú Îì§ÏóàÏäµÎãàÎã§.
    // ÏÉâÏÉÅÏùÄ Í∞Å Ïπ¥ÌÖåÍ≥†Î¶¨Ïóê Ìï†ÎãπÎê† Í≥†Ïú†Ìïú ÏÉâÏÉÅÏûÖÎãàÎã§.
    const rawSpendingData = [
        { category: 'ÏãùÎπÑ', amount: 350000, iconClass: 'fas fa-utensils', color: '#FF6384' },
        { category: 'ÍµêÌÜµ', amount: 120000, iconClass: 'fas fa-bus', color: '#36A2EB' },
        { category: 'Ïπ¥Ìéò/Í∞ÑÏãù', amount: 80000, iconClass: 'fas fa-coffee', color: '#FFCE56' },
        { category: 'Î¨∏ÌôîÏÉùÌôú', amount: 0, iconClass: 'fas fa-film', color: '#4BC0C0' }, // ÏßÄÏ∂ú 0
        { category: 'ÏáºÌïë', amount: 200000, iconClass: 'fas fa-shopping-bag', color: '#9966FF' },
        { category: 'ÌÜµÏã†', amount: 50000, iconClass: 'fas fa-phone', color: '#FF9F40' },
        { category: 'ÏÉùÌôúÏö©Ìíà', amount: 70000, iconClass: 'fas fa-lightbulb', color: '#C9CBCF' },
        { category: 'ÏõîÏÑ∏', amount: 500000, iconClass: 'fas fa-home', color: '#7E7A7A' }
    ];

    // üéØ ÏßÄÏ∂úÏù¥ 0Ïù¥ ÏïÑÎãå Ïπ¥ÌÖåÍ≥†Î¶¨Îßå ÌïÑÌÑ∞ÎßÅ
    const spendingData = rawSpendingData.filter(data => data.amount > 0);

    const categories = spendingData.map(data => data.category);
    const amounts = spendingData.map(data => data.amount);
    const colors = spendingData.map(data => data.color);
    const totalExpense = amounts.reduce((sum, current) => sum + current, 0);

    // Ï¥ù ÏßÄÏ∂ú ÏöîÏïΩ ÏóÖÎç∞Ïù¥Ìä∏
    document.getElementById('total-expense').textContent = totalExpense.toLocaleString('ko-KR') + 'Ïõê';

    // üéØ Chart.js ÏÑ§Ï†ï Î∞è Î†åÎçîÎßÅ
    const ctx = document.getElementById('categoryExpenseChart').getContext('2d');
    const categoryExpenseChart = new Chart(ctx, {
        type: 'doughnut', // ÏõêÌòï Í∑∏ÎûòÌîÑ Ï§ëÏóêÏÑúÎèÑ 'ÏñáÏùÄ' Ìö®Í≥ºÎ•º ÏúÑÌï¥ ÎèÑÎÑõ Ï∞®Ìä∏ ÏÑ†ÌÉù
        data: {
            labels: categories,
            datasets: [{
                data: amounts,
                backgroundColor: colors,
                borderColor: '#ffffff', // Í∞Å Ï°∞Í∞Å ÏÇ¨Ïù¥Ïùò Í≤ΩÍ≥ÑÏÑ† ÏÉâÏÉÅ
                borderWidth: 2,
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false, // Ïª®ÌÖåÏù¥ÎÑàÏóê ÎßûÏ∂∞ ÌÅ¨Í∏∞ Ï°∞Ï†à
            cutout: '70%', // ÎèÑÎÑõ Ï∞®Ìä∏Ïùò ÎëêÍªò (Ïà´ÏûêÍ∞Ä ÌÅ¥ÏàòÎ°ù ÏñáÏïÑÏßê)
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const label = context.label || '';
                            const value = context.parsed || 0;
                            const total = context.dataset.data.reduce((acc, current) => acc + current, 0);
                            const percentage = ((value / total) * 100).toFixed(1);
                            return `${label}: ${value.toLocaleString('ko-KR')}Ïõê (${percentage}%)`;
                        }
                    }
                },
                legend: {
                    display: false, // Chart.js Í∏∞Î≥∏ Î≤îÎ°ÄÎäî ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÍ≥† Ïª§Ïä§ÌÖÄ Î≤îÎ°Ä ÏÉùÏÑ±
                },
            }
        }
    });

    // üéØ Ïª§Ïä§ÌÖÄ Ïπ¥ÌÖåÍ≥†Î¶¨ Î¶¨Ïä§Ìä∏ ÏÉùÏÑ± Î∞è Î†åÎçîÎßÅ
    const categoryListElement = document.getElementById('categoryList');
    categoryListElement.innerHTML = ''; // Í∏∞Ï°¥ ÎÇ¥Ïö© Ï¥àÍ∏∞Ìôî

    spendingData.forEach(data => {
        const listItem = document.createElement('li');

        // ÏïÑÏù¥ÏΩò wrapper (ÏÉâÏÉÅ Î∞∞Í≤Ω)
        const iconWrapper = document.createElement('div');
        iconWrapper.className = 'icon-wrapper';
        iconWrapper.style.backgroundColor = data.color;

        // ÏïÑÏù¥ÏΩò (Font Awesome ÏÇ¨Ïö©)
        const icon = document.createElement('i');
        icon.className = data.iconClass; // Ïòà: fas fa-utensils
        iconWrapper.appendChild(icon);

        const categoryName = document.createElement('span');
        categoryName.className = 'category-name';
        categoryName.textContent = data.category;

        const total = amounts.reduce((sum, current) => sum + current, 0);
        const percentage = ((data.amount / total) * 100).toFixed(1);
        const percentageSpan = document.createElement('span');
        percentageSpan.className = 'percentage';
        percentageSpan.textContent = percentage + '%';

        const amountSpan = document.createElement('span');
        amountSpan.className = 'amount';
        amountSpan.textContent = data.amount.toLocaleString('ko-KR') + 'Ïõê';

        listItem.appendChild(iconWrapper);
        listItem.appendChild(categoryName);
        listItem.appendChild(percentageSpan);
        listItem.appendChild(amountSpan);
        categoryListElement.appendChild(listItem);
    });
});